!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-button",inactiveButtonClass:"modal__submit-button_inactive",inputErrorClass:"modal__input_type_error",errorClass:"modal__error"},t=(e,t,r)=>{e.querySelector(`#${t.id}-error`).textContent="",t.classList.remove(r.inputErrorClass)},r=(e,t,r)=>{(e=>e.some((e=>!e.validity.valid)))(e)?n(t,r):(t.disabled=!1,t.classList.remove(r.inactiveButtonClass))},n=(e,t)=>{e.disabled=!0,e.classList.add(t.inactiveButtonClass)};function o(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Save",n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Saving...";e.textContent=t?n:r}function a(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Saving...";t.preventDefault();const n=t.submitter,a=n.textContent;o(n,!0,a,r),e().then((()=>{t.target.reset()})).catch(console.error).finally((()=>{o(n,!1,a,r)}))}let c,s,i;const l=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error ${e.status}`)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._checkResponse)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._checkResponse)}editUserInfo(e){let{name:t,about:r}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})}).then(this._checkResponse)}editAvatar(e){let{avatar:t}=e;return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then(this._checkResponse)}newCardPost(e){let{name:t,link:r}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})}).then(this._checkResponse)}deleteCard(e){let{cardId:t}=e;return fetch(`${this._baseUrl}/cards/${t}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}handleLike(e){let{cardId:t,isLiked:r}=e;return fetch(`${this._baseUrl}/cards/${t}/likes`,{method:r?"DELETE":"PUT",headers:this._headers}).then(this._checkResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"affadb7a-4331-4fd2-8582-ffa1f1bc4b49","Content-Type":"application/json"}}),d=document.querySelector(".profile__edit-button"),u=document.querySelector(".profile__name"),m=document.querySelector(".profile__description"),h=document.querySelector(".profile__avatar img"),_=document.querySelector(".profile__avatar-button"),f=document.querySelector("#edit-profile-modal"),v=document.querySelector("#profile-name-input"),p=document.querySelector("#profile-description-input"),y=(f.querySelector(".modal__form"),document.forms["profile-form"]),S=document.querySelector("#edit-avatar-modal"),b=document.forms["avatar-form"],k=document.querySelector("#profile-picture-input"),q=document.querySelector(".profile__add-button"),E=document.querySelector("#new-post-modal"),L=document.forms["newPost-form"],g=document.querySelector("#newPost-link-input"),C=document.querySelector("#newPost-caption-input"),U=E.querySelector(".modal__submit-button"),I=document.querySelector("#delete-post-modal"),x=document.querySelectorAll(".modal__close"),A=document.querySelector("#preview-modal"),$=A.querySelector(".modal__image"),P=A.querySelector(".modal__caption"),w=document.querySelectorAll(".modal"),D=document.querySelector("#card-template"),R=document.querySelector(".cards__list"),T=I.querySelector(".modal__delete-button"),B=I.querySelector(".modal__cancel-button");function N(e){e.classList.add("modal_opened"),document.addEventListener("keydown",j)}function O(e){e.classList.remove("modal_opened"),document.removeEventListener("keydown",j)}function j(e){if("Escape"===e.key){const e=document.querySelector(".modal_opened");e&&O(e)}}function J(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"append";const r=function(e){const t=D.content.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__title"),n=t.querySelector(".card__image"),o=t.querySelector(".card__like-button"),a=t.querySelector(".card__delete-button");return e.isLiked&&o.classList.add("card__like-button_clicked"),r.textContent=e.name,n.src=e.link,n.alt=e.name,o.addEventListener("click",(t=>{!function(e,t){const r=e.target,n=r.classList.contains("card__like-button_clicked");l.handleLike({cardId:t,isLiked:n}).then((e=>{e.isLiked?r.classList.add("card__like-button_clicked"):r.classList.remove("card__like-button_clicked")})).catch(console.error)}(t,e._id)})),a.addEventListener("click",(r=>{!function(e,t){s=e,i=t._id,console.log("Selected Card ID:",i),N(I)}(t,e)})),n.addEventListener("click",(()=>{N(A),P.textContent=e.name,$.src=e.link,P.alt=e.name})),t}(e);R[t](r)}var H;document.getElementById("spots-logo-black").src="8650253b58b46f0f1c06.svg",w.forEach((e=>{!function(e){e.addEventListener("click",(t=>{t.target===e&&O(e)}))}(e)})),x.forEach((e=>{const t=e.closest(".modal");e.addEventListener("click",(()=>O(t)))})),d.addEventListener("click",(()=>{var r,n;v.value=u.textContent,p.value=m.textContent,r=f,n=e,[v,p].forEach((e=>{t(r,e,n)})),N(f)})),q.addEventListener("click",(()=>{N(E)})),_.addEventListener("click",(()=>{N(S)})),y.addEventListener("submit",(function(e){a((function(){return l.editUserInfo({name:v.value,about:p.value}).then((e=>{u.textContent=e.name,m.textContent=e.about,O(f)}))}),e,"Saving...")})),L.addEventListener("submit",(function(t){a((function(){return l.newCardPost({link:g.value,name:C.value}).then((t=>{J(t,"prepend"),n(U,e),O(E)}))}),t,"Saving...")})),b.addEventListener("submit",(function(e){a((function(){return l.editAvatar({avatar:k.value}).then((e=>{h.src=e.avatar,h.alt=e.name,O(S)}))}),e,"Saving...")})),T.addEventListener("click",(function(e){e.preventDefault();const t=e.target;o(t,!0,"Delete","Deleting..."),l.deleteCard({cardId:i}).then((()=>{s.remove(),O(I)})).catch(console.error).finally((()=>{o(t,!1,"Delete","Deleting...")}))})),B.addEventListener("click",(()=>O(I))),l.getAppInfo().then((e=>{let[t,r]=e;u.textContent=r.name,m.textContent=r.about,h.src=r.avatar,h.alt=r.name,c=r._id,t.reverse().forEach((e=>{J(e)}))})).catch(console.error),H=e,Array.from(document.querySelectorAll(H.formSelector)).forEach((e=>{((e,o)=>{const a=Array.from(e.querySelectorAll(o.inputSelector)),c=e.querySelector(o.submitButtonSelector);r(a,c,o),e.addEventListener("reset",(()=>{n(c,o)})),a.forEach((n=>{n.addEventListener("input",(function(){((e,r,n)=>{r.validity.valid?t(e,r,n):((e,t,r,n)=>{e.querySelector(`#${t.id}-error`).textContent=r,t.classList.add(n.inputErrorClass)})(e,r,r.validationMessage,n)})(e,n,o),r(a,c,o)}))}))})(e,H)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,